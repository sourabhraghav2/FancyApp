[{"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\index.tsx":"1","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\App.tsx":"2","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\modules\\stores.tsx":"3","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\modules\\actions.tsx":"4","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\LandingPage.tsx":"5","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\menu.tsx":"6","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\landingPage.tsx":"7","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\userLoginForm.tsx":"8","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\createAccount.tsx":"9","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\changeLanguageForm.tsx":"10","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\securityModification.tsx":"11","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\security\\inMemoryJWTManager.tsx":"12","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\service\\LoginService.tsx":"13","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\common\\constants.tsx":"14","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\util\\HttpUtil.tsx":"15"},{"size":299,"mtime":1609761678309,"results":"16","hashOfConfig":"17"},{"size":185,"mtime":1609755048033,"results":"18","hashOfConfig":"17"},{"size":575,"mtime":1609778872792,"results":"19","hashOfConfig":"17"},{"size":280,"mtime":1609771164591,"results":"20","hashOfConfig":"17"},{"size":1547,"mtime":1609754839477,"results":"21","hashOfConfig":"17"},{"size":1147,"mtime":1609773706721,"results":"22","hashOfConfig":"17"},{"size":5906,"mtime":1609777209287,"results":"23","hashOfConfig":"17"},{"size":1431,"mtime":1609778712719,"results":"24","hashOfConfig":"17"},{"size":1698,"mtime":1609775825951,"results":"25","hashOfConfig":"17"},{"size":1641,"mtime":1609775013743,"results":"26","hashOfConfig":"17"},{"size":2328,"mtime":1609777149309,"results":"27","hashOfConfig":"17"},{"size":780,"mtime":1609768599573,"results":"28","hashOfConfig":"17"},{"size":1646,"mtime":1609778624028,"results":"29","hashOfConfig":"17"},{"size":127,"mtime":1609778707088,"results":"30","hashOfConfig":"17"},{"size":1330,"mtime":1609778603711,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1y9j63k",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\index.tsx",[],["64","65"],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\App.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\modules\\stores.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\modules\\actions.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\LandingPage.tsx",["66","67"],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\menu.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\landingPage.tsx",["68"],"import React , {useState,useEffect} from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport 'components/useraccount/style/landingPage.scss';\r\nimport {changeScreenType} from '../../modules/actions'\r\nimport Menu from './menu';\r\nimport UserLoginForm from './userLoginForm';\r\nimport CreateAccountForm from './createAccount';\r\nimport ChangeLanguageForm from './changeLanguageForm';\r\nimport SecurityModification from './securityModification';\r\nimport { LoginService } from 'service/LoginService';\r\nimport { LoginRequest, LoginResponse } from 'model/LoginRequest';\r\nimport inMemoryJWTManager from 'security/inMemoryJWTManager';\r\nimport { ScreenType } from 'common/constants';\r\nimport { CreateAccountRequest } from 'model/createAccount';\r\nimport { LanguageChangeRequest, LanguageChangeResponse } from 'model/languageModel';\r\nimport { ChangePasswordRequest, ChangePasswordResponse } from 'model/changePassword';\r\n\r\n\r\nconst LandingPage =(props)=> {\r\n  const service=new LoginService()\r\n  console.log(\"inside LandingPage : \",JSON.stringify(props))\r\n  const [menuShow,setMenuShow] = useState(false);\r\n  useEffect(() => {\r\n\r\n    if(inMemoryJWTManager.getToken())\r\n      props.changeScreenType(ScreenType.CHANGE_LANGUAGE_FORM)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log (\"inside useEffect \")\r\n    if(props.screenType!==ScreenType.LOGIN_FORM && props.screenType!==ScreenType.CREATE_ACCOUNT_FORM)\r\n      setMenuShow(true)\r\n    else \r\n      setMenuShow(false)\r\n  }, [props.screenType]);\r\n\r\n    const leftMenu=()=>{\r\n      return menuShow?\r\n      <Menu \r\n        genaralMenuClickHandler={genaralMenuClickHandler} \r\n        securityMenuClickHandler={securityMenuClickHandler} \r\n        LogoutMenuClickHandler={LogoutMenuClickHandler}\r\n      />:<div></div>\r\n    }\r\n\r\n    \r\n  const loginClickHandler= async (username:string,password:string) =>{\r\n    console.log (\"inside : loginClickHandler\")\r\n    \r\n    const request={username, password} as LoginRequest\r\n    console.log(\"Request : \",JSON.stringify(request))\r\n    const resp:LoginResponse= await service.attamptLogin(request) \r\n    if(resp.isSuccess){\r\n      props.changeScreenType(ScreenType.CHANGE_LANGUAGE_FORM)\r\n      inMemoryJWTManager.setToken(resp.jwtTokken)\r\n    }  \r\n  }\r\n  const createAccountClickHandler =async(username:string,password:string)=>{\r\n    const request={username, password} as CreateAccountRequest\r\n    console.log(\"Request : \",JSON.stringify(request))\r\n    const resp:LoginResponse= await service.createAccount(request) \r\n    if(resp.isSuccess){\r\n      props.changeScreenType(ScreenType.CHANGE_LANGUAGE_FORM)\r\n      inMemoryJWTManager.setToken(resp.jwtTokken)\r\n    }else {\r\n      props.changeScreenType(ScreenType.LOGIN_FORM)\r\n    }\r\n  }\r\n  \r\n  const genaralMenuClickHandler=()=>{\r\n    console.log('inside : genaralMenuClickHandler')\r\n    props.changeScreenType(ScreenType.CHANGE_LANGUAGE_FORM)\r\n  }\r\n  const securityMenuClickHandler=()=>{\r\n    console.log('inside : securityMenuClickHandler')\r\n    props.changeScreenType(ScreenType.SECURITY_MODIFICATION)\r\n  \r\n  }\r\n  const LogoutMenuClickHandler=async()=>{\r\n    console.log('inside : LogoutMenuClickHandler')\r\n    props.changeScreenType(ScreenType.LOGIN_FORM)\r\n    inMemoryJWTManager.ereaseToken()\r\n    const done=await service.logout() \r\n    console.log('Response : ',done)\r\n  }\r\n  const displayCreateAccountHandler=()=>{\r\n    console.log (\"inside : displayCreateAccountHandler\")\r\n    const jwt=inMemoryJWTManager.getToken()\r\n    console.log(\"Jwt : \",jwt)\r\n    props.changeScreenType(ScreenType.CREATE_ACCOUNT_FORM)\r\n    \r\n  }\r\n  const onSaveClickHandler=async(language:string,privacy:string)=>{\r\n    console.log('inside onSaveClickHandler : ',language,\" : \",privacy)    \r\n    const request={\r\n      language,privacy\r\n    } as LanguageChangeRequest\r\n    const resp:LanguageChangeResponse= await service.languageChange(request) \r\n    console.log(\"resp : \",JSON.stringify(resp))\r\n  }\r\n  const changePasswordHandler =async(username:string,password:string)=>{\r\n    const request={username, password} as ChangePasswordRequest\r\n    console.log(\"Request : \",JSON.stringify(request))\r\n    const resp:ChangePasswordResponse= await service.changePassword(request) \r\n    console.log('Response : ',resp.isSuccess)\r\n  }\r\n  \r\n  const deleteAccountHandler =async(username:string,password:string)=>{\r\n    console.log('inside : LogoutMenuClickHandler')\r\n    props.changeScreenType(ScreenType.LOGIN_FORM)\r\n    inMemoryJWTManager.ereaseToken()\r\n    const done=await service.delete() \r\n    console.log('Response : ',done)\r\n  }\r\n  \r\n  \r\n  \r\n  const containerBody=()=>{\r\n      return (\r\n        <div className=\"container-body\">\r\n          {props.screenType===ScreenType.LOGIN_FORM && \r\n            <UserLoginForm \r\n              loginClickHandler={loginClickHandler} \r\n              displayCreateAccountHandler={displayCreateAccountHandler}\r\n            />\r\n          }\r\n          {props.screenType===ScreenType.CREATE_ACCOUNT_FORM && \r\n            <CreateAccountForm \r\n              createAccountClickHandler={createAccountClickHandler} \r\n            />}\r\n          {props.screenType===ScreenType.CHANGE_LANGUAGE_FORM && \r\n            <ChangeLanguageForm \r\n              onSaveClickHandler={onSaveClickHandler}\r\n            />\r\n          }\r\n          {props.screenType===ScreenType.SECURITY_MODIFICATION && \r\n            <SecurityModification  \r\n              deleteAccountHandler={deleteAccountHandler} \r\n              changePasswordHandler={changePasswordHandler} \r\n            />\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n\treturn (\r\n    <div className=\"landingPage\">\r\n       {leftMenu()}\r\n      {containerBody()}\r\n    </div>\r\n\t)\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log (\"inside mapStateToProps: \",JSON.stringify(state))\r\n    return {\r\n      screenType: state.userStore.screenType\r\n    };\r\n  }\r\n\r\n  export default connect((mapStateToProps),{\r\n      changeScreenType,\r\n  })(LandingPage);","C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\userLoginForm.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\createAccount.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\changeLanguageForm.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\components\\useraccount\\securityModification.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\security\\inMemoryJWTManager.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\service\\LoginService.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\common\\constants.tsx",[],"C:\\Sourabh\\Workspace\\React\\Experiments\\WSP_7\\fancy-app-challenge\\src\\util\\HttpUtil.tsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":11,"column":19,"nodeType":"75","messageId":"76","endLine":11,"endColumn":30},{"ruleId":"73","severity":1,"message":"77","line":13,"column":11,"nodeType":"75","messageId":"76","endLine":13,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":28,"column":6,"nodeType":"80","endLine":28,"endColumn":8,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'setMenuShow' is assigned a value but never used.","Identifier","unusedVar","'counter' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [props]",{"range":"87","text":"88"},[1224,1226],"[props]"]